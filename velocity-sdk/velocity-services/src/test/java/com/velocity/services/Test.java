/**
 * 
 */
package com.velocity.services;

/**
 * @author anitk
 *
 */

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.FileInputStream;
import java.io.InputStreamReader;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.Unmarshaller;

import org.apache.axis.encoding.Base64;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ByteArrayEntity;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;

import com.velocity.model.response.BankcardTransactionResponsePro;

class Test {

	private static String localdir = "D:\\JARS"; 
	
	public static void main(String[] args) throws Exception {
		
		
		JAXBContext jc = null;
		CloseableHttpClient httpClient = HttpClients.createDefault();
		HttpGet getRequest = new HttpGet("https://api.cert.nabcommerce.com/REST/2.0.18/SvcInfo/token");
		
//		String realEncIdentitytoken = "UEhOaGJXdzZRWE56WlhKMGFXOXVJRTFoYW05eVZtVnljMmx2YmowaU1TSWdUV2x1YjNKV1pYSnphVzl1UFNJeElpQkJjM05sY25ScGIyNUpSRDBpWHpkbE1EaGlOemRqTFRVelpXRXROREV3WkMxaE5tSmlMVEF5WWpKbU1UQXpNekV3WXlJZ1NYTnpkV1Z5UFNKSmNHTkJkWFJvWlc1MGFXTmhkR2x2YmlJZ1NYTnpkV1ZKYm5OMFlXNTBQU0l5TURFMExURXdMVEV3VkRJd09qTTJPakU0TGpNM09Wb2lJSGh0Ykc1ek9uTmhiV3c5SW5WeWJqcHZZWE5wY3pwdVlXMWxjenAwWXpwVFFVMU1PakV1TURwaGMzTmxjblJwYjI0aVBqeHpZVzFzT2tOdmJtUnBkR2x2Ym5NZ1RtOTBRbVZtYjNKbFBTSXlNREUwTFRFd0xURXdWREl3T2pNMk9qRTRMak0zT1ZvaUlFNXZkRTl1VDNKQlpuUmxjajBpTWpBME5DMHhNQzB4TUZReU1Eb3pOam94T0M0ek56bGFJajQ4TDNOaGJXdzZRMjl1WkdsMGFXOXVjejQ4YzJGdGJEcEJaSFpwWTJVK1BDOXpZVzFzT2tGa2RtbGpaVDQ4YzJGdGJEcEJkSFJ5YVdKMWRHVlRkR0YwWlcxbGJuUStQSE5oYld3NlUzVmlhbVZqZEQ0OGMyRnRiRHBPWVcxbFNXUmxiblJwWm1sbGNqNUdSak5DUWpaRVF6VTRNekF3TURBeFBDOXpZVzFzT2s1aGJXVkpaR1Z1ZEdsbWFXVnlQand2YzJGdGJEcFRkV0pxWldOMFBqeHpZVzFzT2tGMGRISnBZblYwWlNCQmRIUnlhV0oxZEdWT1lXMWxQU0pUUVVzaUlFRjBkSEpwWW5WMFpVNWhiV1Z6Y0dGalpUMGlhSFIwY0RvdkwzTmphR1Z0WVhNdWFYQmpiMjF0WlhKalpTNWpiMjB2U1dSbGJuUnBkSGtpUGp4ellXMXNPa0YwZEhKcFluVjBaVlpoYkhWbFBrWkdNMEpDTmtSRE5UZ3pNREF3TURFOEwzTmhiV3c2UVhSMGNtbGlkWFJsVm1Gc2RXVStQQzl6WVcxc09rRjBkSEpwWW5WMFpUNDhjMkZ0YkRwQmRIUnlhV0oxZEdVZ1FYUjBjbWxpZFhSbFRtRnRaVDBpVTJWeWFXRnNJaUJCZEhSeWFXSjFkR1ZPWVcxbGMzQmhZMlU5SW1oMGRIQTZMeTl6WTJobGJXRnpMbWx3WTI5dGJXVnlZMlV1WTI5dEwwbGtaVzUwYVhSNUlqNDhjMkZ0YkRwQmRIUnlhV0oxZEdWV1lXeDFaVDVpTVRWbE1UQTRNUzAwWkdZMkxUUXdNVFl0T0RNM01pMDJOemhrWXpkbVpEUXpOVGM4TDNOaGJXdzZRWFIwY21saWRYUmxWbUZzZFdVK1BDOXpZVzFzT2tGMGRISnBZblYwWlQ0OGMyRnRiRHBCZEhSeWFXSjFkR1VnUVhSMGNtbGlkWFJsVG1GdFpUMGlibUZ0WlNJZ1FYUjBjbWxpZFhSbFRtRnRaWE53WVdObFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OTNjeTh5TURBMUx6QTFMMmxrWlc1MGFYUjVMMk5zWVdsdGN5SStQSE5oYld3NlFYUjBjbWxpZFhSbFZtRnNkV1UrUmtZelFrSTJSRU0xT0RNd01EQXdNVHd2YzJGdGJEcEJkSFJ5YVdKMWRHVldZV3gxWlQ0OEwzTmhiV3c2UVhSMGNtbGlkWFJsUGp3dmMyRnRiRHBCZEhSeWFXSjFkR1ZUZEdGMFpXMWxiblErUEZOcFoyNWhkSFZ5WlNCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JeUkrUEZOcFoyNWxaRWx1Wm04K1BFTmhibTl1YVdOaGJHbDZZWFJwYjI1TlpYUm9iMlFnUVd4bmIzSnBkR2h0UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXhMekV3TDNodGJDMWxlR010WXpFMGJpTWlQand2UTJGdWIyNXBZMkZzYVhwaGRHbHZiazFsZEdodlpENDhVMmxuYm1GMGRYSmxUV1YwYUc5a0lFRnNaMjl5YVhSb2JUMGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM4d09TOTRiV3hrYzJsbkkzSnpZUzF6YUdFeElqNDhMMU5wWjI1aGRIVnlaVTFsZEdodlpENDhVbVZtWlhKbGJtTmxJRlZTU1QwaUkxODNaVEE0WWpjM1l5MDFNMlZoTFRReE1HUXRZVFppWWkwd01tSXlaakV3TXpNeE1HTWlQanhVY21GdWMyWnZjbTF6UGp4VWNtRnVjMlp2Y20wZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3THpBNUwzaHRiR1J6YVdjalpXNTJaV3h2Y0dWa0xYTnBaMjVoZEhWeVpTSStQQzlVY21GdWMyWnZjbTArUEZSeVlXNXpabTl5YlNCQmJHZHZjbWwwYUcwOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREV2TVRBdmVHMXNMV1Y0WXkxak1UUnVJeUkrUEM5VWNtRnVjMlp2Y20wK1BDOVVjbUZ1YzJadmNtMXpQanhFYVdkbGMzUk5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3THpBNUwzaHRiR1J6YVdjamMyaGhNU0krUEM5RWFXZGxjM1JOWlhSb2IyUStQRVJwWjJWemRGWmhiSFZsUG5sM05WWnhXSGxVVFVoNU5VTmpkbVJYTjAxVFYyUmhNRFpNVFQwOEwwUnBaMlZ6ZEZaaGJIVmxQand2VW1WbVpYSmxibU5sUGp3dlUybG5ibVZrU1c1bWJ6NDhVMmxuYm1GMGRYSmxWbUZzZFdVK1dHOVpjVVJRYVVvcll5OUlNbFJGUmpOUU1XcFFkVkJVWjBWRFZIcDFjRlZsUlhwRVNFUndNbEUyWlc5MlQybGhOMHBrVmpJMWJ6WmpUazF2Y3pCVFR6UklTU3RTVUdSVVIzaEpVVzl4YTBwYWVFdG9UelpIY1daMldIRkRhMk5OYjJKQ2VteFliVzgzTlVGU1dVNWpNSGRsWjFoaVFVVlZRVkZDY1ZObWVHd3hjM2h1U2xjMVpIWmpjbHB1VXl0a1NUaG9jMmxaWlc0dlQwVlRPVWR0WlVwc1pWZDFXVVI0VTB4bVFqWkpabmQ2ZGs1TFEweGxTMEZYZW5Ca1RrOU5ZbXBRVGpKeU5VSldRVWhRWkVKNldtdGlTR1p3ZFVsYWJscDFRMmw1T0VOdmFFbzFiSFUzV0daRGJYcEhkVzk2VkRWcVZFMHdVM0Y2YkhsemVVcFdXVk5TYlZGVVFXNVdNVlZHTUdvdmJFeDZTVTE0TVZKbWRXbHRXSE5YYVZrNGMyUnZRMklyWlhwQmNWSm5iazVFVlNzM05sVllPRVpGU0VOM1EyYzVhMHRMU3pRd01YZFlOWHBMZDJGUFJHSkpVRnBFWWl0QlBUMDhMMU5wWjI1aGRIVnlaVlpoYkhWbFBqeExaWGxKYm1adlBqeHZPbE5sWTNWeWFYUjVWRzlyWlc1U1pXWmxjbVZ1WTJVZ2VHMXNibk02YnowaWFIUjBjRG92TDJSdlkzTXViMkZ6YVhNdGIzQmxiaTV2Y21jdmQzTnpMekl3TURRdk1ERXZiMkZ6YVhNdE1qQXdOREF4TFhkemN5MTNjM05sWTNWeWFYUjVMWE5sWTJWNGRDMHhMakF1ZUhOa0lqNDhienBMWlhsSlpHVnVkR2xtYVdWeUlGWmhiSFZsVkhsd1pUMGlhSFIwY0RvdkwyUnZZM011YjJGemFYTXRiM0JsYmk1dmNtY3ZkM056TDI5aGMybHpMWGR6Y3kxemIyRndMVzFsYzNOaFoyVXRjMlZqZFhKcGRIa3RNUzR4STFSb2RXMWljSEpwYm5SVFNFRXhJajVaUkVKbFJGTkdNMFo0UjJkbWQzcFNMekJ3Y2sxMU9UWm9RMk05UEM5dk9rdGxlVWxrWlc1MGFXWnBaWEkrUEM5dk9sTmxZM1Z5YVhSNVZHOXJaVzVTWldabGNtVnVZMlUrUEM5TFpYbEpibVp2UGp3dlUybG5ibUYwZFhKbFBqd3ZjMkZ0YkRwQmMzTmxjblJwYjI0Kzo=";
		
//		realEncIdentitytoken = "UEhOaGJXdzZRWE56WlhKMGFXOXVJRTFoYW05eVZtVnljMmx2YmowaU1TSWdUV2x1YjNKV1pYSnphVzl1UFNJeElpQkJjM05sY25ScGIyNUpSRDBpWHpkbE1EaGlOemRqTFRVelpXRXROREV3WkMxaE5tSmlMVEF5WWpKbU1UQXpNekV3WXlJZ1NYTnpkV1Z5UFNKSmNHTkJkWFJvWlc1MGFXTmhkR2x2YmlJZ1NYTnpkV1ZKYm5OMFlXNTBQU0l5TURFMExURXdMVEV3VkRJd09qTTJPakU0TGpNM09Wb2lJSGh0Ykc1ek9uTmhiV3c5SW5WeWJqcHZZWE5wY3pwdVlXMWxjenAwWXpwVFFVMU1PakV1TURwaGMzTmxjblJwYjI0aVBqeHpZVzFzT2tOdmJtUnBkR2x2Ym5NZ1RtOTBRbVZtYjNKbFBTSXlNREUwTFRFd0xURXdWREl3T2pNMk9qRTRMak0zT1ZvaUlFNXZkRTl1VDNKQlpuUmxjajBpTWpBME5DMHhNQzB4TUZReU1Eb3pOam94T0M0ek56bGFJajQ4TDNOaGJXdzZRMjl1WkdsMGFXOXVjejQ4YzJGdGJEcEJaSFpwWTJVK1BDOXpZVzFzT2tGa2RtbGpaVDQ4YzJGdGJEcEJkSFJ5YVdKMWRHVlRkR0YwWlcxbGJuUStQSE5oYld3NlUzVmlhbVZqZEQ0OGMyRnRiRHBPWVcxbFNXUmxiblJwWm1sbGNqNUdSak5DUWpaRVF6VTRNekF3TURBeFBDOXpZVzFzT2s1aGJXVkpaR1Z1ZEdsbWFXVnlQand2YzJGdGJEcFRkV0pxWldOMFBqeHpZVzFzT2tGMGRISnBZblYwWlNCQmRIUnlhV0oxZEdWT1lXMWxQU0pUUVVzaUlFRjBkSEpwWW5WMFpVNWhiV1Z6Y0dGalpUMGlhSFIwY0RvdkwzTmphR1Z0WVhNdWFYQmpiMjF0WlhKalpTNWpiMjB2U1dSbGJuUnBkSGtpUGp4ellXMXNPa0YwZEhKcFluVjBaVlpoYkhWbFBrWkdNMEpDTmtSRE5UZ3pNREF3TURFOEwzTmhiV3c2UVhSMGNtbGlkWFJsVm1Gc2RXVStQQzl6WVcxc09rRjBkSEpwWW5WMFpUNDhjMkZ0YkRwQmRIUnlhV0oxZEdVZ1FYUjBjbWxpZFhSbFRtRnRaVDBpVTJWeWFXRnNJaUJCZEhSeWFXSjFkR1ZPWVcxbGMzQmhZMlU5SW1oMGRIQTZMeTl6WTJobGJXRnpMbWx3WTI5dGJXVnlZMlV1WTI5dEwwbGtaVzUwYVhSNUlqNDhjMkZ0YkRwQmRIUnlhV0oxZEdWV1lXeDFaVDVpTVRWbE1UQTRNUzAwWkdZMkxUUXdNVFl0T0RNM01pMDJOemhrWXpkbVpEUXpOVGM4TDNOaGJXdzZRWFIwY21saWRYUmxWbUZzZFdVK1BDOXpZVzFzT2tGMGRISnBZblYwWlQ0OGMyRnRiRHBCZEhSeWFXSjFkR1VnUVhSMGNtbGlkWFJsVG1GdFpUMGlibUZ0WlNJZ1FYUjBjbWxpZFhSbFRtRnRaWE53WVdObFBTSm9kSFJ3T2k4dmMyTm9aVzFoY3k1NGJXeHpiMkZ3TG05eVp5OTNjeTh5TURBMUx6QTFMMmxrWlc1MGFYUjVMMk5zWVdsdGN5SStQSE5oYld3NlFYUjBjbWxpZFhSbFZtRnNkV1UrUmtZelFrSTJSRU0xT0RNd01EQXdNVHd2YzJGdGJEcEJkSFJ5YVdKMWRHVldZV3gxWlQ0OEwzTmhiV3c2UVhSMGNtbGlkWFJsUGp3dmMyRnRiRHBCZEhSeWFXSjFkR1ZUZEdGMFpXMWxiblErUEZOcFoyNWhkSFZ5WlNCNGJXeHVjejBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01DOHdPUzk0Yld4a2MybG5JeUkrUEZOcFoyNWxaRWx1Wm04K1BFTmhibTl1YVdOaGJHbDZZWFJwYjI1TlpYUm9iMlFnUVd4bmIzSnBkR2h0UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXhMekV3TDNodGJDMWxlR010WXpFMGJpTWlQand2UTJGdWIyNXBZMkZzYVhwaGRHbHZiazFsZEdodlpENDhVMmxuYm1GMGRYSmxUV1YwYUc5a0lFRnNaMjl5YVhSb2JUMGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM4d09TOTRiV3hrYzJsbkkzSnpZUzF6YUdFeElqNDhMMU5wWjI1aGRIVnlaVTFsZEdodlpENDhVbVZtWlhKbGJtTmxJRlZTU1QwaUkxODNaVEE0WWpjM1l5MDFNMlZoTFRReE1HUXRZVFppWWkwd01tSXlaakV3TXpNeE1HTWlQanhVY21GdWMyWnZjbTF6UGp4VWNtRnVjMlp2Y20wZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3THpBNUwzaHRiR1J6YVdjalpXNTJaV3h2Y0dWa0xYTnBaMjVoZEhWeVpTSStQQzlVY21GdWMyWnZjbTArUEZSeVlXNXpabTl5YlNCQmJHZHZjbWwwYUcwOUltaDBkSEE2THk5M2QzY3Vkek11YjNKbkx6SXdNREV2TVRBdmVHMXNMV1Y0WXkxak1UUnVJeUkrUEM5VWNtRnVjMlp2Y20wK1BDOVVjbUZ1YzJadmNtMXpQanhFYVdkbGMzUk5aWFJvYjJRZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3THpBNUwzaHRiR1J6YVdjamMyaGhNU0krUEM5RWFXZGxjM1JOWlhSb2IyUStQRVJwWjJWemRGWmhiSFZsUG5sM05WWnhXSGxVVFVoNU5VTmpkbVJYTjAxVFYyUmhNRFpNVFQwOEwwUnBaMlZ6ZEZaaGJIVmxQand2VW1WbVpYSmxibU5sUGp3dlUybG5ibVZrU1c1bWJ6NDhVMmxuYm1GMGRYSmxWbUZzZFdVK1dHOVpjVVJRYVVvcll5OUlNbFJGUmpOUU1XcFFkVkJVWjBWRFZIcDFjRlZsUlhwRVNFUndNbEUyWlc5MlQybGhOMHBrVmpJMWJ6WmpUazF2Y3pCVFR6UklTU3RTVUdSVVIzaEpVVzl4YTBwYWVFdG9UelpIY1daMldIRkRhMk5OYjJKQ2VteFliVzgzTlVGU1dVNWpNSGRsWjFoaVFVVlZRVkZDY1ZObWVHd3hjM2h1U2xjMVpIWmpjbHB1VXl0a1NUaG9jMmxaWlc0dlQwVlRPVWR0WlVwc1pWZDFXVVI0VTB4bVFqWkpabmQ2ZGs1TFEweGxTMEZYZW5Ca1RrOU5ZbXBRVGpKeU5VSldRVWhRWkVKNldtdGlTR1p3ZFVsYWJscDFRMmw1T0VOdmFFbzFiSFUzV0daRGJYcEhkVzk2VkRWcVZFMHdVM0Y2YkhsemVVcFdXVk5TYlZGVVFXNVdNVlZHTUdvdmJFeDZTVTE0TVZKbWRXbHRXSE5YYVZrNGMyUnZRMklyWlhwQmNWSm5iazVFVlNzM05sVllPRVpGU0VOM1EyYzVhMHRMU3pRd01YZFlOWHBMZDJGUFJHSkpVRnBFWWl0QlBUMDhMMU5wWjI1aGRIVnlaVlpoYkhWbFBqeExaWGxKYm1adlBqeHZPbE5sWTNWeWFYUjVWRzlyWlc1U1pXWmxjbVZ1WTJVZ2VHMXNibk02YnowaWFIUjBjRG92TDJSdlkzTXViMkZ6YVhNdGIzQmxiaTV2Y21jdmQzTnpMekl3TURRdk1ERXZiMkZ6YVhNdE1qQXdOREF4TFhkemN5MTNjM05sWTNWeWFYUjVMWE5sWTJWNGRDMHhMakF1ZUhOa0lqNDhienBMWlhsSlpHVnVkR2xtYVdWeUlGWmhiSFZsVkhsd1pUMGlhSFIwY0RvdkwyUnZZM011YjJGemFYTXRiM0JsYmk1dmNtY3ZkM056TDI5aGMybHpMWGR6Y3kxemIyRndMVzFsYzNOaFoyVXRjMlZqZFhKcGRIa3RNUzR4STFSb2RXMWljSEpwYm5SVFNFRXhJajVaUkVKbFJGTkdNMFo0UjJkbWQzcFNMekJ3Y2sxMU9UWm9RMk05UEM5dk9rdGxlVWxrWlc1MGFXWnBaWEkrUEM5dk9sTmxZM1Z5YVhSNVZHOXJaVzVTWldabGNtVnVZMlUrUEM5TFpYbEpibVp2UGp3dlUybG5ibUYwZFhKbFBqd3ZjMkZ0YkRwQmMzTmxjblJwYjI0Kzo=";
		
		String identitytoken = "PHNhbWw6QXNzZXJ0aW9uIE1ham9yVmVyc2lvbj0iMSIgTWlub3JWZXJzaW9uPSIxIiBBc3NlcnRpb25JRD0iXzdlMDhiNzdjLTUzZWEtNDEwZC1hNmJiLTAyYjJmMTAzMzEwYyIgSXNzdWVyPSJJcGNBdXRoZW50aWNhdGlvbiIgSXNzdWVJbnN0YW50PSIyMDE0LTEwLTEwVDIwOjM2OjE4LjM3OVoiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMDphc3NlcnRpb24iPjxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDE0LTEwLTEwVDIwOjM2OjE4LjM3OVoiIE5vdE9uT3JBZnRlcj0iMjA0NC0xMC0xMFQyMDozNjoxOC4zNzlaIj48L3NhbWw6Q29uZGl0aW9ucz48c2FtbDpBZHZpY2U+PC9zYW1sOkFkdmljZT48c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PHNhbWw6U3ViamVjdD48c2FtbDpOYW1lSWRlbnRpZmllcj5GRjNCQjZEQzU4MzAwMDAxPC9zYW1sOk5hbWVJZGVudGlmaWVyPjwvc2FtbDpTdWJqZWN0PjxzYW1sOkF0dHJpYnV0ZSBBdHRyaWJ1dGVOYW1lPSJTQUsiIEF0dHJpYnV0ZU5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMuaXBjb21tZXJjZS5jb20vSWRlbnRpdHkiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPkZGM0JCNkRDNTgzMDAwMDE8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iU2VyaWFsIiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5iMTVlMTA4MS00ZGY2LTQwMTYtODM3Mi02NzhkYzdmZDQzNTc8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0ibmFtZSIgQXR0cmlidXRlTmFtZXNwYWNlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcyI+PHNhbWw6QXR0cmlidXRlVmFsdWU+RkYzQkI2REM1ODMwMDAwMTwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PFNpZ25hdHVyZSB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PFNpZ25lZEluZm8+PENhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiPjwvQ2Fub25pY2FsaXphdGlvbk1ldGhvZD48U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIj48L1NpZ25hdHVyZU1ldGhvZD48UmVmZXJlbmNlIFVSST0iI183ZTA4Yjc3Yy01M2VhLTQxMGQtYTZiYi0wMmIyZjEwMzMxMGMiPjxUcmFuc2Zvcm1zPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSI+PC9UcmFuc2Zvcm0+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyI+PC9UcmFuc2Zvcm0+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSI+PC9EaWdlc3RNZXRob2Q+PERpZ2VzdFZhbHVlPnl3NVZxWHlUTUh5NUNjdmRXN01TV2RhMDZMTT08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+WG9ZcURQaUorYy9IMlRFRjNQMWpQdVBUZ0VDVHp1cFVlRXpESERwMlE2ZW92T2lhN0pkVjI1bzZjTk1vczBTTzRISStSUGRUR3hJUW9xa0paeEtoTzZHcWZ2WHFDa2NNb2JCemxYbW83NUFSWU5jMHdlZ1hiQUVVQVFCcVNmeGwxc3huSlc1ZHZjclpuUytkSThoc2lZZW4vT0VTOUdtZUpsZVd1WUR4U0xmQjZJZnd6dk5LQ0xlS0FXenBkTk9NYmpQTjJyNUJWQUhQZEJ6WmtiSGZwdUlablp1Q2l5OENvaEo1bHU3WGZDbXpHdW96VDVqVE0wU3F6bHlzeUpWWVNSbVFUQW5WMVVGMGovbEx6SU14MVJmdWltWHNXaVk4c2RvQ2IrZXpBcVJnbk5EVSs3NlVYOEZFSEN3Q2c5a0tLSzQwMXdYNXpLd2FPRGJJUFpEYitBPT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvPjxvOlNlY3VyaXR5VG9rZW5SZWZlcmVuY2UgeG1sbnM6bz0iaHR0cDovL2RvY3Mub2FzaXMtb3Blbi5vcmcvd3NzLzIwMDQvMDEvb2FzaXMtMjAwNDAxLXdzcy13c3NlY3VyaXR5LXNlY2V4dC0xLjAueHNkIj48bzpLZXlJZGVudGlmaWVyIFZhbHVlVHlwZT0iaHR0cDovL2RvY3Mub2FzaXMtb3Blbi5vcmcvd3NzL29hc2lzLXdzcy1zb2FwLW1lc3NhZ2Utc2VjdXJpdHktMS4xI1RodW1icHJpbnRTSEExIj5ZREJlRFNGM0Z4R2dmd3pSLzBwck11OTZoQ2M9PC9vOktleUlkZW50aWZpZXI+PC9vOlNlY3VyaXR5VG9rZW5SZWZlcmVuY2U+PC9LZXlJbmZvPjwvU2lnbmF0dXJlPjwvc2FtbDpBc3NlcnRpb24+";
		
//		String catureAllIdentitytoken = "PHNhbWw6QXNzZXJ0aW9uIE1ham9yVmVyc2lvbj0iMSIgTWlub3JWZXJzaW9uPSIxIiBBc3NlcnRpb25JRD0iXzQ2ZTdkZDAzLTIwYzctNGJlZS1hNTdhLWRiNmE4MTA5MDlkNiIgSXNzdWVyPSJJcGNBdXRoZW50aWNhdGlvbiIgSXNzdWVJbnN0YW50PSIyMDE0LTExLTA3VDIxOjQ5OjU2Ljg3N1oiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMDphc3NlcnRpb24iPjxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDE0LTExLTA3VDIxOjQ5OjU2Ljg3N1oiIE5vdE9uT3JBZnRlcj0iMjA0NC0xMS0wN1QyMTo0OTo1Ni44NzdaIj48L3NhbWw6Q29uZGl0aW9ucz48c2FtbDpBZHZpY2U+PC9zYW1sOkFkdmljZT48c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PHNhbWw6U3ViamVjdD48c2FtbDpOYW1lSWRlbnRpZmllcj4xQzA4MTc1OEVFNzAwMDAxPC9zYW1sOk5hbWVJZGVudGlmaWVyPjwvc2FtbDpTdWJqZWN0PjxzYW1sOkF0dHJpYnV0ZSBBdHRyaWJ1dGVOYW1lPSJTQUsiIEF0dHJpYnV0ZU5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMuaXBjb21tZXJjZS5jb20vSWRlbnRpdHkiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPjFDMDgxNzU4RUU3MDAwMDE8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iU2VyaWFsIiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT40OTJhNWU0Yi02NWE0LTRkOTktYjQ0MS1iMzJjOTdmODNkNzY8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0ibmFtZSIgQXR0cmlidXRlTmFtZXNwYWNlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcyI+PHNhbWw6QXR0cmlidXRlVmFsdWU+MUMwODE3NThFRTcwMDAwMTwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PFNpZ25hdHVyZSB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PFNpZ25lZEluZm8+PENhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiPjwvQ2Fub25pY2FsaXphdGlvbk1ldGhvZD48U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIj48L1NpZ25hdHVyZU1ldGhvZD48UmVmZXJlbmNlIFVSST0iI180NmU3ZGQwMy0yMGM3LTRiZWUtYTU3YS1kYjZhODEwOTA5ZDYiPjxUcmFuc2Zvcm1zPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSI+PC9UcmFuc2Zvcm0+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyI+PC9UcmFuc2Zvcm0+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSI+PC9EaWdlc3RNZXRob2Q+PERpZ2VzdFZhbHVlPlQ2QmZhUDB2bXgwRitsT3JrRDVja0h4U2lYRT08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+VHBOalhUNnFMejZ5K2RYVU5yQlRQV0hqVitWbmVkTlNNNTNqdzB5N1RxK1NndEI1OEcvWjdKTEFoNUVLRTBqRERpMHRuQ3cvdmF3bGZ6TjU3VVBxeERzZVpmb1FobmJpQzVxVm5CNmZyOVFZRTlYQ0d1OG01bXhLYno2djl3QzVkVlFEMmxXenRFT0trcnZWL1kwRFVOR2drOEZpdFhmbk1rMVpvakdnNzUvaVFHYW4vUFlWaTBNZDYvc3JLZ1IzdkVsTTlUMm5GWVNkSmlrZUFvM3cweUlEZDNPbG5PL2UyNE1GTzQxdlE3d3lIZDBZUkdDZ2I1YVU4K0ZYelJRbXlyK00rU1RpQVlHT3MwcGRPVE9RNlBleGRITndFS1YzVzJkSUExaElIR2EvUmY0WWc0d0p2aTNublJHd2Z2b1h3RlZYckNsd1d4SVV4ODR2eGtDNitnPT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvPjxvOlNlY3VyaXR5VG9rZW5SZWZlcmVuY2UgeG1sbnM6bz0iaHR0cDovL2RvY3Mub2FzaXMtb3Blbi5vcmcvd3NzLzIwMDQvMDEvb2FzaXMtMjAwNDAxLXdzcy13c3NlY3VyaXR5LXNlY2V4dC0xLjAueHNkIj48bzpLZXlJZGVudGlmaWVyIFZhbHVlVHlwZT0iaHR0cDovL2RvY3Mub2FzaXMtb3Blbi5vcmcvd3NzL29hc2lzLXdzcy1zb2FwLW1lc3NhZ2Utc2VjdXJpdHktMS4xI1RodW1icHJpbnRTSEExIj5ZREJlRFNGM0Z4R2dmd3pSLzBwck11OTZoQ2M9PC9vOktleUlkZW50aWZpZXI+PC9vOlNlY3VyaXR5VG9rZW5SZWZlcmVuY2U+PC9LZXlJbmZvPjwvU2lnbmF0dXJlPjwvc2FtbDpBc3NlcnRpb24+";
//		 identitytoken = catureAllIdentitytoken;
		
		
		String encIdentitytoken = new String(Base64.encode((identitytoken + ":").getBytes()));
//		System.out.println("encIdentitytoken == "+encIdentitytoken);
		
//		String identitytoken2 = "PHNhbWw6QXNzZXJ0aW9uIE1ham9yVmVyc2lvbj0iMSIgTWlub3JWZXJzaW9uPSIxIiBBc3NlcnRpb25JRD0iXzdlMDhiNzdjLTUzZWEtNDEwZC1hNmJiLTAyYjJmMTAzMzEwYyIgSXNzdWVyPSJJcGNBdXRoZW50aWNhdGlvbiIgSXNzdWVJbnN0YW50PSIyMDE0LTEwLTEwVDIwOjM2OjE4LjM3OVoiIHhtbG5zOnNhbWw9InVybjpvYXNpczpuYW1lczp0YzpTQU1MOjEuMDphc3NlcnRpb24iPjxzYW1sOkNvbmRpdGlvbnMgTm90QmVmb3JlPSIyMDE0LTEwLTEwVDIwOjM2OjE4LjM3OVoiIE5vdE9uT3JBZnRlcj0iMjA0NC0xMC0xMFQyMDozNjoxOC4zNzlaIj48L3NhbWw6Q29uZGl0aW9ucz48c2FtbDpBZHZpY2U+PC9zYW1sOkFkdmljZT48c2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PHNhbWw6U3ViamVjdD48c2FtbDpOYW1lSWRlbnRpZmllcj5GRjNCQjZEQzU4MzAwMDAxPC9zYW1sOk5hbWVJZGVudGlmaWVyPjwvc2FtbDpTdWJqZWN0PjxzYW1sOkF0dHJpYnV0ZSBBdHRyaWJ1dGVOYW1lPSJTQUsiIEF0dHJpYnV0ZU5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMuaXBjb21tZXJjZS5jb20vSWRlbnRpdHkiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPkZGM0JCNkRDNTgzMDAwMDE8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iU2VyaWFsIiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5iMTVlMTA4MS00ZGY2LTQwMTYtODM3Mi02NzhkYzdmZDQzNTc8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0ibmFtZSIgQXR0cmlidXRlTmFtZXNwYWNlPSJodHRwOi8vc2NoZW1hcy54bWxzb2FwLm9yZy93cy8yMDA1LzA1L2lkZW50aXR5L2NsYWltcyI+PHNhbWw6QXR0cmlidXRlVmFsdWU+RkYzQkI2REM1ODMwMDAwMTwvc2FtbDpBdHRyaWJ1dGVWYWx1ZT48L3NhbWw6QXR0cmlidXRlPjwvc2FtbDpBdHRyaWJ1dGVTdGF0ZW1lbnQ+PFNpZ25hdHVyZSB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnIyI+PFNpZ25lZEluZm8+PENhbm9uaWNhbGl6YXRpb25NZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiPjwvQ2Fub25pY2FsaXphdGlvbk1ldGhvZD48U2lnbmF0dXJlTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3JzYS1zaGExIj48L1NpZ25hdHVyZU1ldGhvZD48UmVmZXJlbmNlIFVSST0iI183ZTA4Yjc3Yy01M2VhLTQxMGQtYTZiYi0wMmIyZjEwMzMxMGMiPjxUcmFuc2Zvcm1zPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjZW52ZWxvcGVkLXNpZ25hdHVyZSI+PC9UcmFuc2Zvcm0+PFRyYW5zZm9ybSBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDEvMTAveG1sLWV4Yy1jMTRuIyI+PC9UcmFuc2Zvcm0+PC9UcmFuc2Zvcm1zPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSI+PC9EaWdlc3RNZXRob2Q+PERpZ2VzdFZhbHVlPnl3NVZxWHlUTUh5NUNjdmRXN01TV2RhMDZMTT08L0RpZ2VzdFZhbHVlPjwvUmVmZXJlbmNlPjwvU2lnbmVkSW5mbz48U2lnbmF0dXJlVmFsdWU+WG9ZcURQaUorYy9IMlRFRjNQMWpQdVBUZ0VDVHp1cFVlRXpESERwMlE2ZW92T2lhN0pkVjI1bzZjTk1vczBTTzRISStSUGRUR3hJUW9xa0paeEtoTzZHcWZ2WHFDa2NNb2JCemxYbW83NUFSWU5jMHdlZ1hiQUVVQVFCcVNmeGwxc3huSlc1ZHZjclpuUytkSThoc2lZZW4vT0VTOUdtZUpsZVd1WUR4U0xmQjZJZnd6dk5LQ0xlS0FXenBkTk9NYmpQTjJyNUJWQUhQZEJ6WmtiSGZwdUlablp1Q2l5OENvaEo1bHU3WGZDbXpHdW96VDVqVE0wU3F6bHlzeUpWWVNSbVFUQW5WMVVGMGovbEx6SU14MVJmdWltWHNXaVk4c2RvQ2IrZXpBcVJnbk5EVSs3NlVYOEZFSEN3Q2c5a0tLSzQwMXdYNXpLd2FPRGJJUFpEYitBPT08L1NpZ25hdHVyZVZhbHVlPjxLZXlJbmZvPjxvOlNlY3VyaXR5VG9rZW5SZWZlcmVuY2UgeG1sbnM6bz0iaHR0cDovL2RvY3Mub2FzaXMtb3Blbi5vcmcvd3NzLzIwMDQvMDEvb2FzaXMtMjAwNDAxLXdzcy13c3NlY3VyaXR5LXNlY2V4dC0xLjAueHNkIj48bzpLZXlJZGVudGlmaWVyIFZhbHVlVHlwZT0iaHR0cDovL2RvY3Mub2FzaXMtb3Blbi5vcmcvd3NzL29hc2lzLXdzcy1zb2FwLW1lc3NhZ2Utc2VjdXJpdHktMS4xI1RodW1icHJpbnRTSEExIj5ZREJlRFNGM0Z4R2dmd3pSLzBwck11OTZoQ2M9PC9vOktleUlkZW50aWZpZXI+PC9vOlNlY3VyaXR5VG9rZW5SZWZlcmVuY2U+PC9LZXlJbmZvPjwvU2lnbmF0dXJlPjwvc2FtbDpBc3NlcnRpb24+";
		
		getRequest.addHeader("Authorization", "Basic "+encIdentitytoken);
		getRequest.addHeader("Content-type", "application/json");
		getRequest.addHeader("Accept", "");
//		System.out.println(getRequest);
		HttpResponse response = httpClient.execute(getRequest);
		
		System.out.println("Identity Token response :: "+response.getStatusLine().getReasonPhrase());
		
		// Get-Capture Complete application/xml body response
		BufferedReader br = new BufferedReader(new InputStreamReader((response.getEntity().getContent())));
		String output = null;
		System.out.println("============Output:============");
		
		String sessionToken = null;
		// Simply iterate through XML response and show on console.
		/*while ((output = br.readLine()) != null) {
			sessionToken = output;
			break;
		}*/
		
		sessionToken = EntityUtils.toString(response.getEntity());
		System.out.println("sessionToken:"+sessionToken);
		
		sessionToken = sessionToken.substring(1, sessionToken.length() - 1);
		
		String workflowid = "2317000001";
		
		String xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\Xmls\\" + "test.xml");
		
		HttpPost postRequest = new HttpPost("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/"+workflowid+"/verify");
//		sessionToken = "PHNhbWw6QXNzZXJ0aW9uIE1ham9yVmVyc2lvbj0iMSIgTWlub3JWZXJzaW9uPSIxIiBBc3NlcnRpb25JRD0iXzZhM2I3NzRmLTRhOGYtNDljMi1iY2YzLThiMTliNTcwZDYyZSIgSXNzdWVyPSJJUENfU0VDVVJJVFlfU1RTIiBJc3N1ZUluc3RhbnQ9IjIwMTQtMTItMjBUMTI6MzA6MTQuODg1WiIgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6MS4wOmFzc2VydGlvbiI+PHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMTQtMTItMjBUMTI6MTM6MzQuODg1WiIgTm90T25PckFmdGVyPSIyMDE0LTEyLTIwVDEzOjAwOjE0Ljg4NVoiPjwvc2FtbDpDb25kaXRpb25zPjxzYW1sOkFkdmljZT48L3NhbWw6QWR2aWNlPjxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD48c2FtbDpTdWJqZWN0PjxzYW1sOk5hbWVJZGVudGlmaWVyPkZGM0JCNkRDNTgzMDAwMDE8L3NhbWw6TmFtZUlkZW50aWZpZXI+PHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbj48c2FtbDpDb25maXJtYXRpb25NZXRob2Q+dXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6MS4wOmNtOmhvbGRlci1vZi1rZXk8L3NhbWw6Q29uZmlybWF0aW9uTWV0aG9kPjxLZXlJbmZvIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48ZTpFbmNyeXB0ZWRLZXkgeG1sbnM6ZT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjIj48ZTpFbmNyeXB0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjcnNhLW9hZXAtbWdmMXAiPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSI+PC9EaWdlc3RNZXRob2Q+PC9lOkVuY3J5cHRpb25NZXRob2Q+PEtleUluZm8+PG86U2VjdXJpdHlUb2tlblJlZmVyZW5jZSB4bWxuczpvPSJodHRwOi8vZG9jcy5vYXNpcy1vcGVuLm9yZy93c3MvMjAwNC8wMS9vYXNpcy0yMDA0MDEtd3NzLXdzc2VjdXJpdHktc2VjZXh0LTEuMC54c2QiPjxvOktleUlkZW50aWZpZXIgVmFsdWVUeXBlPSJodHRwOi8vZG9jcy5vYXNpcy1vcGVuLm9yZy93c3Mvb2FzaXMtd3NzLXNvYXAtbWVzc2FnZS1zZWN1cml0eS0xLjEjVGh1bWJwcmludFNIQTEiPjFBOVRvZHRwNHpuZytRZVI0Sm9nSmVjYjhWaz08L286S2V5SWRlbnRpZmllcj48L286U2VjdXJpdHlUb2tlblJlZmVyZW5jZT48L0tleUluZm8+PGU6Q2lwaGVyRGF0YT48ZTpDaXBoZXJWYWx1ZT5zU0R6ZlBUamg5K1pMMFBQWktDV0VzcDIwSzdBVk9jQXROdHBYclNNa21rN1kwR1ArdDliWjVBVWgvakFkNDFzY1pGTVNPOS96U0p2OGVWV0hHS200S1Z0NFRkUHdjWU1mZnhicW4vVnMvOXZOQ0tsRFY3TXZ4ckhzcm54ZDhrNW91MmttN0NXUWtFZkl5T1kyRmZnY0lYd0J2TngwSFhEdEFsUkZvaWpxMTJHK1JPYzJBdTdyU3RxWUpQY2FNRjRZV0ZSaDB3cW1wekk0ajNYVzg0UHZseEFSVlg2b3VFWnJJSUVacTJIY1RnMExKY2ZOemN3cUgzczVFNTdSL1J4UjdDclRqQ1pYUjhxdFdVd0dmSVErU3FWcFNHekluU2JISzY4TElxZ3NpS3lmQWMwU2RiblAwV04rdUdSTUJ6NitJNEtscTk1YUlBcHRrNGNYT3ByWnc9PTwvZTpDaXBoZXJWYWx1ZT48L2U6Q2lwaGVyRGF0YT48L2U6RW5jcnlwdGVkS2V5PjwvS2V5SW5mbz48L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj48L3NhbWw6U3ViamVjdD48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iU0FLIiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5GRjNCQjZEQzU4MzAwMDAxPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIEF0dHJpYnV0ZU5hbWU9Im5hbWUiIEF0dHJpYnV0ZU5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPkZGM0JCNkRDNTgzMDAwMDE8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iQXV0aGVudGljYXRpb25Sb290IiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5iMTVlMTA4MS00ZGY2LTQwMTYtODM3Mi02NzhkYzdmZDQzNTc8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iQXV0aGVudGljYXRpb25Sb290TWV0aG9kIiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5TQU1MMTA8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50PjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxTaWduZWRJbmZvPjxDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIj48L0Nhbm9uaWNhbGl6YXRpb25NZXRob2Q+PFNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNyc2Etc2hhMSI+PC9TaWduYXR1cmVNZXRob2Q+PFJlZmVyZW5jZSBVUkk9IiNfNmEzYjc3NGYtNGE4Zi00OWMyLWJjZjMtOGIxOWI1NzBkNjJlIj48VHJhbnNmb3Jtcz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiPjwvVHJhbnNmb3JtPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiPjwvVHJhbnNmb3JtPjwvVHJhbnNmb3Jtcz48RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3NoYTEiPjwvRGlnZXN0TWV0aG9kPjxEaWdlc3RWYWx1ZT5pVFBxd1oxOFNxeExJMFpCd2Z0aVlacFlMdXM9PC9EaWdlc3RWYWx1ZT48L1JlZmVyZW5jZT48L1NpZ25lZEluZm8+PFNpZ25hdHVyZVZhbHVlPlZUMDZETkxZVCs1OGQxSCtuOGtEc201QWZLbTZuK0dUc1Vpd2t6aXZBVWorVFdFb3lvK2Y4Y2tQdkUyMVl4bTlpeG9ONUxuSjJFVlRUc2NvYW81ZWx1ckhhMkcwZzU5NzhyZkJRRE9wRGFuVUpvYUg4NzE4VmYvbnlzTTJpTVJKbTdSdWZEUkRYVjJWRmxTZnpGSlNQR252NmJTOHR4R1plSjFXTytvVWhCb2xmQytWZzFuRnQ3U3JuOUZLN1hkbWJBa0x0U2ZzRlJqUGEya2IvN2R4alFkM0Z1UjlORGJNMW5YUWJ4cjJ3bTFKR3FrckwxZTJ0MG9qUVZRMlc1RzlUL0FVVksrbGtGTkNBckhnY09rT3V0T0pLTmw4d2hja1RKQnpYVmlibDRqS3JNQUMyc2hVLzJIRWVRaFVxZVFmNy9kUi8yaUhtRmdWZXA2bmttWFpRQT09PC9TaWduYXR1cmVWYWx1ZT48S2V5SW5mbz48bzpTZWN1cml0eVRva2VuUmVmZXJlbmNlIHhtbG5zOm89Imh0dHA6Ly9kb2NzLm9hc2lzLW9wZW4ub3JnL3dzcy8yMDA0LzAxL29hc2lzLTIwMDQwMS13c3Mtd3NzZWN1cml0eS1zZWNleHQtMS4wLnhzZCI+PG86S2V5SWRlbnRpZmllciBWYWx1ZVR5cGU9Imh0dHA6Ly9kb2NzLm9hc2lzLW9wZW4ub3JnL3dzcy9vYXNpcy13c3Mtc29hcC1tZXNzYWdlLXNlY3VyaXR5LTEuMSNUaHVtYnByaW50U0hBMSI+NWdLMEFKT3hvNmRKVTVQZWxOam5qSFpETUJBPTwvbzpLZXlJZGVudGlmaWVyPjwvbzpTZWN1cml0eVRva2VuUmVmZXJlbmNlPjwvS2V5SW5mbz48L1NpZ25hdHVyZT48L3NhbWw6QXNzZXJ0aW9uPg==";
//		sessionToken = "PHNhbWw6QXNzZXJ0aW9uIE1ham9yVmVyc2lvbj0iMSIgTWlub3JWZXJzaW9uPSIxIiBBc3NlcnRpb25JRD0iXzQyYjNmNzE4LTJhNzAtNDI4YS1hMjQyLWIxMzliNDhiMDY4ZSIgSXNzdWVyPSJJUENfU0VDVVJJVFlfU1RTIiBJc3N1ZUluc3RhbnQ9IjIwMTQtMTItMjBUMTI6MzU6MTAuNTc1WiIgeG1sbnM6c2FtbD0idXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6MS4wOmFzc2VydGlvbiI+PHNhbWw6Q29uZGl0aW9ucyBOb3RCZWZvcmU9IjIwMTQtMTItMjBUMTI6MTg6MzAuNTc1WiIgTm90T25PckFmdGVyPSIyMDE0LTEyLTIwVDEzOjA1OjEwLjU3NVoiPjwvc2FtbDpDb25kaXRpb25zPjxzYW1sOkFkdmljZT48L3NhbWw6QWR2aWNlPjxzYW1sOkF0dHJpYnV0ZVN0YXRlbWVudD48c2FtbDpTdWJqZWN0PjxzYW1sOk5hbWVJZGVudGlmaWVyPkZGM0JCNkRDNTgzMDAwMDE8L3NhbWw6TmFtZUlkZW50aWZpZXI+PHNhbWw6U3ViamVjdENvbmZpcm1hdGlvbj48c2FtbDpDb25maXJtYXRpb25NZXRob2Q+dXJuOm9hc2lzOm5hbWVzOnRjOlNBTUw6MS4wOmNtOmhvbGRlci1vZi1rZXk8L3NhbWw6Q29uZmlybWF0aW9uTWV0aG9kPjxLZXlJbmZvIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjIj48ZTpFbmNyeXB0ZWRLZXkgeG1sbnM6ZT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjIj48ZTpFbmNyeXB0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxlbmMjcnNhLW9hZXAtbWdmMXAiPjxEaWdlc3RNZXRob2QgQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwLzA5L3htbGRzaWcjc2hhMSI+PC9EaWdlc3RNZXRob2Q+PC9lOkVuY3J5cHRpb25NZXRob2Q+PEtleUluZm8+PG86U2VjdXJpdHlUb2tlblJlZmVyZW5jZSB4bWxuczpvPSJodHRwOi8vZG9jcy5vYXNpcy1vcGVuLm9yZy93c3MvMjAwNC8wMS9vYXNpcy0yMDA0MDEtd3NzLXdzc2VjdXJpdHktc2VjZXh0LTEuMC54c2QiPjxvOktleUlkZW50aWZpZXIgVmFsdWVUeXBlPSJodHRwOi8vZG9jcy5vYXNpcy1vcGVuLm9yZy93c3Mvb2FzaXMtd3NzLXNvYXAtbWVzc2FnZS1zZWN1cml0eS0xLjEjVGh1bWJwcmludFNIQTEiPjFBOVRvZHRwNHpuZytRZVI0Sm9nSmVjYjhWaz08L286S2V5SWRlbnRpZmllcj48L286U2VjdXJpdHlUb2tlblJlZmVyZW5jZT48L0tleUluZm8+PGU6Q2lwaGVyRGF0YT48ZTpDaXBoZXJWYWx1ZT5DNkhVN0c0Sml1SjhKdG83NGR4N0ZlQnBLaHBYdGtBREZHVmFVREp3ai9pNkxuM0RtcDBtenoxaXZzZ3laR1VOMkN5bERDdmxONEhqckxkak1KeFlJdW85WVZ2VWpreHAxMVA5aktkOVcxRm1LYmk4U0duUmhTcjhiZUExM010dkgydGVwVE80Q2F1aG02M0diOGNyUWE1aW5aSFFOc3VMb3BQWDZNMmppVjVVY1lFbjVaWm1XanJYbHIvR20vc3ZzdDYzampIOTNTYWRwY1o4eHE1bUpXR0xEcllhNjl3dTF4Qjg4blFTNS90SHJBZ3VzM3ZBY2FaY0VYdi9kRTd5WFV4U0h2OXovY2JDWCtrM2VoVXZ3Q3FRdGFsTDJFU2xmc0kvcWRjZlkzUTdDc2JxSC85eEl0VVZnbTZscG0xdGl0TEtETDdpS1RqOCtscEpHMWZCTnc9PTwvZTpDaXBoZXJWYWx1ZT48L2U6Q2lwaGVyRGF0YT48L2U6RW5jcnlwdGVkS2V5PjwvS2V5SW5mbz48L3NhbWw6U3ViamVjdENvbmZpcm1hdGlvbj48L3NhbWw6U3ViamVjdD48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iU0FLIiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5GRjNCQjZEQzU4MzAwMDAxPC9zYW1sOkF0dHJpYnV0ZVZhbHVlPjwvc2FtbDpBdHRyaWJ1dGU+PHNhbWw6QXR0cmlidXRlIEF0dHJpYnV0ZU5hbWU9Im5hbWUiIEF0dHJpYnV0ZU5hbWVzcGFjZT0iaHR0cDovL3NjaGVtYXMueG1sc29hcC5vcmcvd3MvMjAwNS8wNS9pZGVudGl0eS9jbGFpbXMiPjxzYW1sOkF0dHJpYnV0ZVZhbHVlPkZGM0JCNkRDNTgzMDAwMDE8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iQXV0aGVudGljYXRpb25Sb290IiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5iMTVlMTA4MS00ZGY2LTQwMTYtODM3Mi02NzhkYzdmZDQzNTc8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48c2FtbDpBdHRyaWJ1dGUgQXR0cmlidXRlTmFtZT0iQXV0aGVudGljYXRpb25Sb290TWV0aG9kIiBBdHRyaWJ1dGVOYW1lc3BhY2U9Imh0dHA6Ly9zY2hlbWFzLmlwY29tbWVyY2UuY29tL0lkZW50aXR5Ij48c2FtbDpBdHRyaWJ1dGVWYWx1ZT5TQU1MMTA8L3NhbWw6QXR0cmlidXRlVmFsdWU+PC9zYW1sOkF0dHJpYnV0ZT48L3NhbWw6QXR0cmlidXRlU3RhdGVtZW50PjxTaWduYXR1cmUgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyMiPjxTaWduZWRJbmZvPjxDYW5vbmljYWxpemF0aW9uTWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMS8xMC94bWwtZXhjLWMxNG4jIj48L0Nhbm9uaWNhbGl6YXRpb25NZXRob2Q+PFNpZ25hdHVyZU1ldGhvZCBBbGdvcml0aG09Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvMDkveG1sZHNpZyNyc2Etc2hhMSI+PC9TaWduYXR1cmVNZXRob2Q+PFJlZmVyZW5jZSBVUkk9IiNfNDJiM2Y3MTgtMmE3MC00MjhhLWEyNDItYjEzOWI0OGIwNjhlIj48VHJhbnNmb3Jtcz48VHJhbnNmb3JtIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI2VudmVsb3BlZC1zaWduYXR1cmUiPjwvVHJhbnNmb3JtPjxUcmFuc2Zvcm0gQWxnb3JpdGhtPSJodHRwOi8vd3d3LnczLm9yZy8yMDAxLzEwL3htbC1leGMtYzE0biMiPjwvVHJhbnNmb3JtPjwvVHJhbnNmb3Jtcz48RGlnZXN0TWV0aG9kIEFsZ29yaXRobT0iaHR0cDovL3d3dy53My5vcmcvMjAwMC8wOS94bWxkc2lnI3NoYTEiPjwvRGlnZXN0TWV0aG9kPjxEaWdlc3RWYWx1ZT5IRUtjUVNYVjl4T2hFNkhDUjdTK2x3S3g4aVU9PC9EaWdlc3RWYWx1ZT48L1JlZmVyZW5jZT48L1NpZ25lZEluZm8+PFNpZ25hdHVyZVZhbHVlPnlRZE9RNVhLUTlMUFpFYkl0bEFvUXpZYUFkc2dnM1g1a0luQkpybnNBLzNiTnVBT0RQM2JObnltdTI1d1NvTlFsZnorVTh4eTFrV3JzWnVweElLWG1GU3pNazhEV2RNNjlmcmNkYlIzdHAzVEtTY0phMjViYlZjejVqMzdGaFpiVnlSeEpmeWNheUtZMko2QlF1bG1NODQ0VkIrS2EvWVV2R1FIOGFyVXRQaHB6OVpYT2l6UDNEMlhMU09WdVEzblQ1RENqb2dSQUx6dlJxaGFPbDdNMDdvMldobXZFZjZ4OHJUbXBtN29Cb2VEYzcra0Y2MEFuaTBVOTh6ZThkMDk0SEdRMGpWZGxxb3RiL2lqRkR4bkd0TlVUbkJYVG1zcko2RG1FTEhIZ29aam13QnM4S3hJVGw1OU1wRmcxblBQNUhQclI4M3BIZjBycy90UkMwQzVyZz09PC9TaWduYXR1cmVWYWx1ZT48S2V5SW5mbz48bzpTZWN1cml0eVRva2VuUmVmZXJlbmNlIHhtbG5zOm89Imh0dHA6Ly9kb2NzLm9hc2lzLW9wZW4ub3JnL3dzcy8yMDA0LzAxL29hc2lzLTIwMDQwMS13c3Mtd3NzZWN1cml0eS1zZWNleHQtMS4wLnhzZCI+PG86S2V5SWRlbnRpZmllciBWYWx1ZVR5cGU9Imh0dHA6Ly9kb2NzLm9hc2lzLW9wZW4ub3JnL3dzcy9vYXNpcy13c3Mtc29hcC1tZXNzYWdlLXNlY3VyaXR5LTEuMSNUaHVtYnByaW50U0hBMSI+NWdLMEFKT3hvNmRKVTVQZWxOam5qSFpETUJBPTwvbzpLZXlJZGVudGlmaWVyPjwvbzpTZWN1cml0eVRva2VuUmVmZXJlbmNlPjwvS2V5SW5mbz48L1NpZ25hdHVyZT48L3NhbWw6QXNzZXJ0aW9uPg==";
		String encSessiontoken = new String(Base64.encode((sessionToken + ":").getBytes()));
//		System.out.println("Hi:"+encSessiontoken);
//		encSessiontoken = "UEhOaGJXdzZRWE56WlhKMGFXOXVJRTFoYW05eVZtVnljMmx2YmowaU1TSWdUV2x1YjNKV1pYSnphVzl1UFNJeElpQkJjM05sY25ScGIyNUpSRDBpWDJWa01XVXhOak00TFRsa09EVXROR1k1WVMxaU1HWmpMVEpsWVRZM09HRm1NalU0TXlJZ1NYTnpkV1Z5UFNKSlVFTmZVMFZEVlZKSlZGbGZVMVJUSWlCSmMzTjFaVWx1YzNSaGJuUTlJakl3TVRRdE1USXRNakJVTVRFNk5UZzZNakl1TkRZeldpSWdlRzFzYm5NNmMyRnRiRDBpZFhKdU9tOWhjMmx6T201aGJXVnpPblJqT2xOQlRVdzZNUzR3T21GemMyVnlkR2x2YmlJK1BITmhiV3c2UTI5dVpHbDBhVzl1Y3lCT2IzUkNaV1p2Y21VOUlqSXdNVFF0TVRJdE1qQlVNVEU2TkRFNk5ESXVORFl6V2lJZ1RtOTBUMjVQY2tGbWRHVnlQU0l5TURFMExURXlMVEl3VkRFeU9qSTRPakl5TGpRMk0xb2lQand2YzJGdGJEcERiMjVrYVhScGIyNXpQanh6WVcxc09rRmtkbWxqWlQ0OEwzTmhiV3c2UVdSMmFXTmxQanh6WVcxc09rRjBkSEpwWW5WMFpWTjBZWFJsYldWdWRENDhjMkZ0YkRwVGRXSnFaV04wUGp4ellXMXNPazVoYldWSlpHVnVkR2xtYVdWeVBrWkdNMEpDTmtSRE5UZ3pNREF3TURFOEwzTmhiV3c2VG1GdFpVbGtaVzUwYVdacFpYSStQSE5oYld3NlUzVmlhbVZqZEVOdmJtWnBjbTFoZEdsdmJqNDhjMkZ0YkRwRGIyNW1hWEp0WVhScGIyNU5aWFJvYjJRK2RYSnVPbTloYzJsek9tNWhiV1Z6T25Sak9sTkJUVXc2TVM0d09tTnRPbWh2YkdSbGNpMXZaaTFyWlhrOEwzTmhiV3c2UTI5dVptbHliV0YwYVc5dVRXVjBhRzlrUGp4TFpYbEpibVp2SUhodGJHNXpQU0pvZEhSd09pOHZkM2QzTG5jekxtOXlaeTh5TURBd0x6QTVMM2h0YkdSemFXY2pJajQ4WlRwRmJtTnllWEIwWldSTFpYa2dlRzFzYm5NNlpUMGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TVM4d05DOTRiV3hsYm1NaklqNDhaVHBGYm1OeWVYQjBhVzl1VFdWMGFHOWtJRUZzWjI5eWFYUm9iVDBpYUhSMGNEb3ZMM2QzZHk1M015NXZjbWN2TWpBd01TOHdOQzk0Yld4bGJtTWpjbk5oTFc5aFpYQXRiV2RtTVhBaVBqeEVhV2RsYzNSTlpYUm9iMlFnUVd4bmIzSnBkR2h0UFNKb2RIUndPaTh2ZDNkM0xuY3pMbTl5Wnk4eU1EQXdMekE1TDNodGJHUnphV2NqYzJoaE1TSStQQzlFYVdkbGMzUk5aWFJvYjJRK1BDOWxPa1Z1WTNKNWNIUnBiMjVOWlhSb2IyUStQRXRsZVVsdVptOCtQRzg2VTJWamRYSnBkSGxVYjJ0bGJsSmxabVZ5Wlc1alpTQjRiV3h1Y3pwdlBTSm9kSFJ3T2k4dlpHOWpjeTV2WVhOcGN5MXZjR1Z1TG05eVp5OTNjM012TWpBd05DOHdNUzl2WVhOcGN5MHlNREEwTURFdGQzTnpMWGR6YzJWamRYSnBkSGt0YzJWalpYaDBMVEV1TUM1NGMyUWlQanh2T2t0bGVVbGtaVzUwYVdacFpYSWdWbUZzZFdWVWVYQmxQU0pvZEhSd09pOHZaRzlqY3k1dllYTnBjeTF2Y0dWdUxtOXlaeTkzYzNNdmIyRnphWE10ZDNOekxYTnZZWEF0YldWemMyRm5aUzF6WldOMWNtbDBlUzB4TGpFalZHaDFiV0p3Y21sdWRGTklRVEVpUGpGQk9WUnZaSFJ3TkhwdVp5dFJaVkkwU205blNtVmpZamhXYXowOEwyODZTMlY1U1dSbGJuUnBabWxsY2o0OEwyODZVMlZqZFhKcGRIbFViMnRsYmxKbFptVnlaVzVqWlQ0OEwwdGxlVWx1Wm04K1BHVTZRMmx3YUdWeVJHRjBZVDQ4WlRwRGFYQm9aWEpXWVd4MVpUNVdPVGxSVlc1SE5XcGphVXAzVWt4SWNUUkhkRGxTV0VjeFdHaDJRbXhhWm10MlFuaHViRlpYTlhweGRXRkJhbmQ0U0VaMEwxQXpSekkyZGtwNFRsbHVSeTgxYTFaSVRUSjZXbTVQV1ZwNGFVeDRObFF3WXpodGNucFhlWEo1UzJwYU5IVjBlRU5CUTBzd1pqZEdRMWRJY0ZveFRtRlNLMGRrUTBWVlZtSjZjVzVVVFhKS1RHMUZSamg2TjJVM01pOTRRVkp0VXpobFN6WkxhV28yZDFnelozRnFaVEY1TmxwVVVVZEZjWEJCVkVFMlUycDBWSHBqZWpWalNrMXFabUZzZUZaeU1uZzNSWEZqYldvMU5EQmFNbTAyUkVsWGFIcEdZV2w1WVVreE5uUnNTWEl2ZFVZeU5rd3ZPV2RUY21seFUyUjBTMUZVVlZSalJWaG9VMnROY0ZJMFQxVnJWakpHTVdWd1JWZERNMmN3ZDJJeU9FaFhjMjFyUldwTlEzVnpVbXRzWVZjNE4yaFFhVE01TXk5QlRXUklaeTh2YmpKcVRGRnliM3BRV1VaeFIzSjFTWFUwYlhWM1VFWTRSREpFZVZwRlJVRTlQVHd2WlRwRGFYQm9aWEpXWVd4MVpUNDhMMlU2UTJsd2FHVnlSR0YwWVQ0OEwyVTZSVzVqY25sd2RHVmtTMlY1UGp3dlMyVjVTVzVtYno0OEwzTmhiV3c2VTNWaWFtVmpkRU52Ym1acGNtMWhkR2x2Ymo0OEwzTmhiV3c2VTNWaWFtVmpkRDQ4YzJGdGJEcEJkSFJ5YVdKMWRHVWdRWFIwY21saWRYUmxUbUZ0WlQwaVUwRkxJaUJCZEhSeWFXSjFkR1ZPWVcxbGMzQmhZMlU5SW1oMGRIQTZMeTl6WTJobGJXRnpMbWx3WTI5dGJXVnlZMlV1WTI5dEwwbGtaVzUwYVhSNUlqNDhjMkZ0YkRwQmRIUnlhV0oxZEdWV1lXeDFaVDVHUmpOQ1FqWkVRelU0TXpBd01EQXhQQzl6WVcxc09rRjBkSEpwWW5WMFpWWmhiSFZsUGp3dmMyRnRiRHBCZEhSeWFXSjFkR1UrUEhOaGJXdzZRWFIwY21saWRYUmxJRUYwZEhKcFluVjBaVTVoYldVOUltNWhiV1VpSUVGMGRISnBZblYwWlU1aGJXVnpjR0ZqWlQwaWFIUjBjRG92TDNOamFHVnRZWE11ZUcxc2MyOWhjQzV2Y21jdmQzTXZNakF3TlM4d05TOXBaR1Z1ZEdsMGVTOWpiR0ZwYlhNaVBqeHpZVzFzT2tGMGRISnBZblYwWlZaaGJIVmxQa1pHTTBKQ05rUkROVGd6TURBd01ERThMM05oYld3NlFYUjBjbWxpZFhSbFZtRnNkV1UrUEM5ellXMXNPa0YwZEhKcFluVjBaVDQ4YzJGdGJEcEJkSFJ5YVdKMWRHVWdRWFIwY21saWRYUmxUbUZ0WlQwaVFYVjBhR1Z1ZEdsallYUnBiMjVTYjI5MElpQkJkSFJ5YVdKMWRHVk9ZVzFsYzNCaFkyVTlJbWgwZEhBNkx5OXpZMmhsYldGekxtbHdZMjl0YldWeVkyVXVZMjl0TDBsa1pXNTBhWFI1SWo0OGMyRnRiRHBCZEhSeWFXSjFkR1ZXWVd4MVpUNWlNVFZsTVRBNE1TMDBaR1kyTFRRd01UWXRPRE0zTWkwMk56aGtZemRtWkRRek5UYzhMM05oYld3NlFYUjBjbWxpZFhSbFZtRnNkV1UrUEM5ellXMXNPa0YwZEhKcFluVjBaVDQ4YzJGdGJEcEJkSFJ5YVdKMWRHVWdRWFIwY21saWRYUmxUbUZ0WlQwaVFYVjBhR1Z1ZEdsallYUnBiMjVTYjI5MFRXVjBhRzlrSWlCQmRIUnlhV0oxZEdWT1lXMWxjM0JoWTJVOUltaDBkSEE2THk5elkyaGxiV0Z6TG1sd1kyOXRiV1Z5WTJVdVkyOXRMMGxrWlc1MGFYUjVJajQ4YzJGdGJEcEJkSFJ5YVdKMWRHVldZV3gxWlQ1VFFVMU1NVEE4TDNOaGJXdzZRWFIwY21saWRYUmxWbUZzZFdVK1BDOXpZVzFzT2tGMGRISnBZblYwWlQ0OEwzTmhiV3c2UVhSMGNtbGlkWFJsVTNSaGRHVnRaVzUwUGp4VGFXZHVZWFIxY21VZ2VHMXNibk05SW1oMGRIQTZMeTkzZDNjdWR6TXViM0puTHpJd01EQXZNRGt2ZUcxc1pITnBaeU1pUGp4VGFXZHVaV1JKYm1adlBqeERZVzV2Ym1sallXeHBlbUYwYVc5dVRXVjBhRzlrSUVGc1oyOXlhWFJvYlQwaWFIUjBjRG92TDNkM2R5NTNNeTV2Y21jdk1qQXdNUzh4TUM5NGJXd3RaWGhqTFdNeE5HNGpJajQ4TDBOaGJtOXVhV05oYkdsNllYUnBiMjVOWlhSb2IyUStQRk5wWjI1aGRIVnlaVTFsZEdodlpDQkJiR2R2Y21sMGFHMDlJbWgwZEhBNkx5OTNkM2N1ZHpNdWIzSm5Mekl3TURBdk1Ea3ZlRzFzWkhOcFp5TnljMkV0YzJoaE1TSStQQzlUYVdkdVlYUjFjbVZOWlhSb2IyUStQRkpsWm1WeVpXNWpaU0JWVWtrOUlpTmZaV1F4WlRFMk16Z3RPV1E0TlMwMFpqbGhMV0l3Wm1NdE1tVmhOamM0WVdZeU5UZ3pJajQ4VkhKaGJuTm1iM0p0Y3o0OFZISmhibk5tYjNKdElFRnNaMjl5YVhSb2JUMGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM4d09TOTRiV3hrYzJsbkkyVnVkbVZzYjNCbFpDMXphV2R1WVhSMWNtVWlQand2VkhKaGJuTm1iM0p0UGp4VWNtRnVjMlp2Y20wZ1FXeG5iM0pwZEdodFBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF4THpFd0wzaHRiQzFsZUdNdFl6RTBiaU1pUGp3dlZISmhibk5tYjNKdFBqd3ZWSEpoYm5ObWIzSnRjejQ4UkdsblpYTjBUV1YwYUc5a0lFRnNaMjl5YVhSb2JUMGlhSFIwY0RvdkwzZDNkeTUzTXk1dmNtY3ZNakF3TUM4d09TOTRiV3hrYzJsbkkzTm9ZVEVpUGp3dlJHbG5aWE4wVFdWMGFHOWtQanhFYVdkbGMzUldZV3gxWlQ1WlZWaERaR1YxT1VWNGJtZHpka2hyUmtOR1pYaHJNazQ0TjNjOVBDOUVhV2RsYzNSV1lXeDFaVDQ4TDFKbFptVnlaVzVqWlQ0OEwxTnBaMjVsWkVsdVptOCtQRk5wWjI1aGRIVnlaVlpoYkhWbFBtcFpUVkYzWkVOTVUwRmhZMnhWV1ROWk0zVmFRWEp5UjNZMlNHWjFhbUZOYWtoTE5GQkVMemMzVUUxcmIyMUNRVmh2TVVwWU5ITlVkbmRLY25kTksyUTJSRFF5WkdkM1FrWnRObFZHZURsNWN6azNVekYwU0M5QlNsZHZka2w0YWxSTGNFeGFiMVkzZGpjMWFFMXBMMlF3VldaSFJHRjRXWGxWUjFkTFNWazJlRmM1Y2pWRlZHdG9NVXR3VlV0aFpVWXpTbUZpVkZwSFNrSjRNa2t4UjB0TEswZHVSMVpZVWtzNEswa3daRzFMYkRocU1ETnFLMGRtY0hSamNHZHdVSE5qVGpRdk56RXdiRXN3Ymt0RlJrWnVkMGhsY1ZacVJ6bG9hRzlGZG1sbmNDOUZUUzlQV2tRM2NWSTVRM2x1YlZZMU0xaExSMVZUYVc4MVpIbDJNa3B2WlVRME0xcHRWbmhaTkZsd01FdzVPV2xGZVRVNGN6RTFjRW8wYTJ0aVNqTmxjMk5wTUdVdmMzbGFkbXBMYzFwa2JrSkVaWFlyTW1OaFRtUXlWelpXTHl0c1NraFRSUzlETTFWbVFsaGpORlk1Ykdkb1VUMDlQQzlUYVdkdVlYUjFjbVZXWVd4MVpUNDhTMlY1U1c1bWJ6NDhienBUWldOMWNtbDBlVlJ2YTJWdVVtVm1aWEpsYm1ObElIaHRiRzV6T204OUltaDBkSEE2THk5a2IyTnpMbTloYzJsekxXOXdaVzR1YjNKbkwzZHpjeTh5TURBMEx6QXhMMjloYzJsekxUSXdNRFF3TVMxM2MzTXRkM056WldOMWNtbDBlUzF6WldObGVIUXRNUzR3TG5oelpDSStQRzg2UzJWNVNXUmxiblJwWm1sbGNpQldZV3gxWlZSNWNHVTlJbWgwZEhBNkx5OWtiMk56TG05aGMybHpMVzl3Wlc0dWIzSm5MM2R6Y3k5dllYTnBjeTEzYzNNdGMyOWhjQzF0WlhOellXZGxMWE5sWTNWeWFYUjVMVEV1TVNOVWFIVnRZbkJ5YVc1MFUwaEJNU0krTldkTE1FRktUM2h2Tm1SS1ZUVlFaV3hPYW01cVNGcEVUVUpCUFR3dmJ6cExaWGxKWkdWdWRHbG1hV1Z5UGp3dmJ6cFRaV04xY21sMGVWUnZhMlZ1VW1WbVpYSmxibU5sUGp3dlMyVjVTVzVtYno0OEwxTnBaMjVoZEhWeVpUNDhMM05oYld3NlFYTnpaWEowYVc5dVBnPT06";
		
		System.out.println("EncSessiontoken :: "+encSessiontoken);
		
		postRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		postRequest.addHeader("Content-type", "application/xml");
		postRequest.addHeader("Accept", "");
		
		HttpEntity entity = new ByteArrayEntity(xml.getBytes());
		postRequest.setEntity(entity);
		response = httpClient.execute(postRequest);
		
		String result = EntityUtils.toString(response.getEntity());
		
		System.out.println("Session Token response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("Verify result:: "+result);
		
		postRequest = new HttpPost("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/2317000001");
		
		postRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		postRequest.addHeader("Content-type", "application/xml");
		postRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\Xmls\\" + "aut.xml");

		entity = new ByteArrayEntity(xml.getBytes());
		postRequest.setEntity(entity);
		response = httpClient.execute(postRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("Autorize response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("Autorize response result:: "+result);
		
		jc = JAXBContext.newInstance(BankcardTransactionResponsePro.class);
		Unmarshaller unmarshaller = jc.createUnmarshaller(); 
		jc = JAXBContext.newInstance(BankcardTransactionResponsePro.class);
		
		BankcardTransactionResponsePro responseBankcardTransactionResponsePro = (BankcardTransactionResponsePro) unmarshaller.unmarshal(new ByteArrayInputStream(result.getBytes()));
		System.out.println("Authorize Transaction Id:: "+responseBankcardTransactionResponsePro.getTransactionId());
		
		/* postRequest = new HttpPost("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/2317000001");
		
		postRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		postRequest.addHeader("Content-type", "application/xml");
		postRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\JARS\\" + "aut-cat.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		postRequest.setEntity(entity);
		response = httpClient.execute(postRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("Autorization Capture response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("Autorize Capture response result:: "+result); */
		
		/*HttpPut putRequest = null;
		
		putRequest = new HttpPut("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/2317000001/3AC25728A17A493A8BBAF725E8A0DB0B");
		
		putRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		putRequest.addHeader("Content-type", "application/xml");
		putRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\Xmls\\" + "captest.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		putRequest.setEntity(entity);
		response = httpClient.execute(putRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("Capture response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("Capture response result:: "+result); */
		
		/*HttpPut putRequest = new HttpPut("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/2317000001/A3036CA1FA854ACDBA6168F9AC3334C1");
		
		putRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		putRequest.addHeader("Content-type", "application/xml");
		putRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\Xmls\\" + "undo.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		putRequest.setEntity(entity);
		response = httpClient.execute(putRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("Undo response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("Undo response result:: "+result);
		
		jc = JAXBContext.newInstance(ErrorResponse.class);
		unmarshaller = jc.createUnmarshaller(); 
		jc = JAXBContext.newInstance(ErrorResponse.class);
		
		if(result.contains("ErrorResponse")) {
		ErrorResponse responseErrorResponse = (ErrorResponse) unmarshaller.unmarshal(new ByteArrayInputStream(result.getBytes()));
		System.out.println("Error Id:: "+responseErrorResponse.getErrorId());
		System.out.println("Help URL:: "+responseErrorResponse.getHelpUrl());
		System.out.println("Operation:: "+responseErrorResponse.getOperation());
		System.out.println("Reason:: "+responseErrorResponse.getReason());
		}*/
		
		
		/*HttpPut putRequest = new HttpPut("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/2317000001/7E53AE55DAA94A78846D7ED3196D19E4");
		
		putRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		putRequest.addHeader("Content-type", "application/xml");
		putRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\Xmls\\" + "adjust1.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		putRequest.setEntity(entity);
		response = httpClient.execute(putRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("Adjust response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("Adjust response result:: "+result); */
		
		/*HttpPut putRequest = null;
		
		putRequest = new HttpPut("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/2317000001/0A453473A751497DB96FF8DC4C2E0716");
		
		putRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		putRequest.addHeader("Content-type", "application/xml");
		putRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\JARS\\" + "capture.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		putRequest.setEntity(entity);
		response = httpClient.execute(putRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("Capture response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("Capture response result:: "+result); */
		
		postRequest = new HttpPost("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/2317000001");
		
		postRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		postRequest.addHeader("Content-type", "application/xml");
		postRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\Xmls\\" + "returnById.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		postRequest.setEntity(entity);
		response = httpClient.execute(postRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("ReturnById response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("ReturnById response result:: "+result);
		
		responseBankcardTransactionResponsePro = (BankcardTransactionResponsePro) unmarshaller.unmarshal(new ByteArrayInputStream(result.getBytes()));
		System.out.println("ReturnById Authorize Transaction Status :: "+responseBankcardTransactionResponsePro.getStatus());
		
		
		
        /*HttpPut putRequest = null;
		
		putRequest = new HttpPut("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/A39DF00001");
		
		putRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		putRequest.addHeader("Content-type", "application/xml");
		putRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\XMLs(Latest_Requirements)\\" + "captureAll_New.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		putRequest.setEntity(entity);
		response = httpClient.execute(putRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("CaptureAll response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("CaptureAll response result:: "+result);*/
		
       
		/*postRequest = new HttpPost("https://api.cert.nabcommerce.com/REST/2.0.18//Txn/BBBAAA0001");
		
		postRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		postRequest.addHeader("Content-type", "application/xml");
		postRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\XMLs(Latest_Requirements)\\" + "p2pauthAndCap.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		postRequest.setEntity(entity);
		response = httpClient.execute(postRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("P2PE AuthAndCapture response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("P2PE AuthAndCapture response result:: "+result);*/
		
		
       postRequest = new HttpPost("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/BBBAAA0001");
		
		postRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		postRequest.addHeader("Content-type", "application/xml");
		postRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\XMLs(Latest_Requirements)\\" + "p2preturnUnlinked.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		postRequest.setEntity(entity);
		response = httpClient.execute(postRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("ReturnUnLinkedP2PE response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("ReturnUnLinkedP2PE response result:: "+result);
		
		/*postRequest = new HttpPost("https://api.cert.nabcommerce.com/REST/2.0.18/Txn/2317000001");
		
		postRequest.addHeader("Authorization", "Basic "+encSessiontoken);
		postRequest.addHeader("Content-type", "application/xml");
		postRequest.addHeader("Accept", "");
		
		xml = readFileAsString("D:\\NorthAmericanBancard-Documents\\Xmls\\" + "returnUnlinkedTest.xml");
		entity = new ByteArrayEntity(xml.getBytes());
		postRequest.setEntity(entity);
		response = httpClient.execute(postRequest);
		
		result = EntityUtils.toString(response.getEntity());
		System.out.println("ReturnUnLinked response:: "+response.getStatusLine().getReasonPhrase());
		System.out.println("ReturnUnLinked response result:: "+result);*/
		
		httpClient.getConnectionManager().shutdown();
	}
	
	private static String readFileAsString(String path) throws Exception
	{

		StringBuffer strBuff = new StringBuffer();

		try {
			FileInputStream fis = new FileInputStream(path);

			int content;
			while ((content = fis.read()) != -1) {
				// convert to char and display it
				strBuff.append((char) content);
			}
			fis.close();
//			System.out.println("After reading file");
//			System.out.println(strBuff.toString());
		}
		catch(Exception ex)
		{
			ex.printStackTrace();
			return null;
		}
		return strBuff.toString();
	}
	
	
}

